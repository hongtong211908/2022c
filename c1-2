#include <stdio.h>
////作用域和生命周期    
//
// 
// 作用域
////局部变量的作用域：就是变量所在的局部范围大括号内{ }
////全局变量的作用域：整个工程，也就是同个项目下都能使用，需方法
//
//
//int main()
//{
//	
//	printf("hello world\n");
//	{
//		int a = 10;//所处的局部范围
//		printf("%d\n",a);//所处的局部范围
//	}
//	return 0;
//}


//声明一下变量
//extern int g_val;
//int main()
//{
//	printf("%d\n",g_val);
//}

//生命周期
// 生命的周期：变量的创建和销毁之间的时间段
// 
// 局部变量的生命周期：进入局部范围就是生命的开始，出到局部范围就是生命结束
// 全局变量的生命周期：程序的生命周期，从main函数开始一直到return 0；结束
//不可能出现两个名字相同的变量，不可重复
//int main()
//{
//	{
//		int a = 10;        //在局部范围就相当于有生命，出到局部外就没了（报错，找不到这个变量）
//		printf("%d\n",a);
//	}
//	return 0;
//}


//常量
// 
// 
// 
//

//#define MAX 10000
//int main()
//{
//	//1，字面常量
//
//	//3.14;//浮点型常量
//	//10; //整形常量
//	//'a'; //字符常量
//	//"abcdef";//字符串常量
//
//
//	//2.const修饰的常变量
//	//const int num = 10;//num就是常变量 - 具有常属性（不能改变的属性）
//
//	//num = 20;
//
//	//printf("%d\n",num);
//
//	//int arr[10] = { 0 };//十个元素
//
//	//const int num = 10;
//	//int arr2[num] = { 0 };//n是变量的，这里是不行
//
//
//	//3.#deefine 定义的标识符常量
//	//MAX = 20000 这种写法是err
//	/*int n = MAX;
//	printf("n= %d\n",n);*/
//
//	
//
//	return 0;
//}




//枚举常量——————
//enum Sex
//{
//	//这种枚举类型的变量的未来可能取值
//	//枚举常量
//	MALE = 5, //赋初值，最开始的值开始
//	FEMALE,
//	SECRET
//};
//
//
//int main()
//{
//	//4,枚举常量
//	//可以一一列举的常量
//
//	enum Sex s = MALE;
//
//	//MALE = 3 不可改 //err
//	printf("%d\n",MALE);
//	printf("%d\n",FEMALE);
//	printf("%d\n",SECRET);
//	
//
//	return 0;
//}



//字符串就是一串字符

//int	main()
//{
//	"abcder";
//	"hello ht";
//
//	return 0;
//}


#include<string.h>
int main()
{
	//字符串数组 --数组就是一组同类型的元素
	//字符串在结尾的位置隐藏了一个叫\0的字符
	//\0是字符串的结束标志

	//char arr[] = "hello";

	char arr1[] = "abc";
	char arr2[] = { 'a','b','c','\0'};//单字符需自己添加\0结束符

	//求字符串的长度
	// 
	printf("%d\n",strlen(arr1));
	printf("%d\n",strlen(arr2));
	//int len = strlen("abc");//string length
	//printf("%d\n",len);


	//打印字符串
	/*printf("%s\n",arr1);
	printf("%s\n",arr2);*/




	return 0;
}
